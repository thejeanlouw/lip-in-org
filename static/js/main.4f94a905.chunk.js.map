{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","soul","id","name","email","CardList","souls","map","SearchBox","placeholder","handleChange","type","onChange","App","changeState","e","console","log","target","value","setState","searchPhrase","state","goodSouls","fetch","then","resp","json","mappedSouls","this","filteredSouls","filter","s","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAGaA,G,kBAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBACAC,IAAI,WACJC,IAAG,+BAA0BH,EAAMI,KAAKC,GAArC,4BAEH,6BAAKL,EAAMI,KAAKE,OAChB,4BAAIN,EAAMI,KAAKG,UANkBP,EAAMI,KAAKC,MCAvCG,EAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,MAAMC,KAAI,SAAAN,GACX,OAAO,cAAC,EAAD,CAAMA,KAAMA,UCJpBO,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACpC,OACI,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCkCPG,E,kDArCb,aAAc,IAAD,8BACX,gBAOFC,YAAc,SAACC,GAEbC,QAAQC,IAAIF,EAAEG,OAAOC,OACrB,EAAKC,SAAS,CAACC,aAAaN,EAAEG,OAAOC,SATrC,EAAKG,MAAQ,CACXD,aAAc,GACdE,UAAW,IAJF,E,gEAcO,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAE,GACJX,QAAQC,IAAIU,GACZ,EAAKP,SAAS,CAACG,UAAUI,IACzB,EAAKP,SAAS,CAACQ,YAAYD,S,+BAGtB,IAAD,EAC8BE,KAAKP,MAAjCC,EADF,EACEA,UAAWF,EADb,EACaA,aACbS,EAAgBP,EAAUQ,QAAO,SAAAC,GAAC,OAAIA,EAAE7B,KAAK8B,cAAcC,SAASb,EAAaY,kBACrF,OACE,sBAAKnC,UAAU,MAAf,UACE,4CACA,6EACA,cAAC,EAAD,CAAWW,YAAY,eAAeC,aAAcmB,KAAKf,cACzD,cAAC,EAAD,CAAUR,MAAOwB,W,GAhCTK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4f94a905.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css'\r\n\r\nexport const Card = props => (\r\n    <div className='card-container' key={props.soul.id}>\r\n        <img \r\n        alt='goodSoul'\r\n        src={`https://robohash.org/${props.soul.id}?set=set5&size=180x180`}\r\n        />\r\n        <h2>{props.soul.name}</h2>\r\n        <p>{props.soul.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport './card-list.styles.css'\r\nimport {Card} from '../card/card.component'\r\n\r\nexport const CardList = props => (\r\n    <div className='card-list'>\r\n        {props.souls.map(soul=>{\r\n              return(<Card soul={soul}/>)\r\n        })}\r\n    </div>\r\n);\r\n","import React from 'react';\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => {\r\n    return(\r\n        <input \r\n            className='search'\r\n            type='search' \r\n            placeholder={placeholder} \r\n            onChange={handleChange}\r\n        />\r\n    )\r\n}","import './App.css';\r\nimport { Component } from 'react';\r\nimport {CardList} from './components/card-list/card-list.component'\r\nimport {SearchBox} from './components/search-box/search-box.component'\r\n\r\nclass App extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      searchPhrase: '',\r\n      goodSouls: []\r\n    }\r\n  }\r\n\r\n  changeState = (e) =>\r\n  {\r\n    console.log(e.target.value)\r\n    this.setState({searchPhrase:e.target.value});\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(resp => resp.json())\r\n    .then(json=>{\r\n      console.log(json);\r\n      this.setState({goodSouls:json});\r\n      this.setState({mappedSouls:json});});\r\n  }\r\n\r\n  render(){\r\n    const { goodSouls, searchPhrase } = this.state; \r\n    const filteredSouls = goodSouls.filter(s => s.name.toLowerCase().includes(searchPhrase.toLowerCase()))\r\n      return (\r\n        <div className=\"App\">\r\n          <h1>Lip-In.Org</h1>\r\n          <p>Be the gift to one of these beautiful souls:</p>\r\n          <SearchBox placeholder='Search Souls' handleChange={this.changeState}/>\r\n          <CardList souls={filteredSouls}/>\r\n        </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}